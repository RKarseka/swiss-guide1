// Миксины для медиа-запросов
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

// Миксины для флексбокса
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

@mixin flex-center {
  @include flex(row, center, center);
}

@mixin flex-between {
  @include flex(row, space-between, center);
}

// Миксины для типографии
@mixin font-size($size) {
  @if map-has-key($font-sizes, $size) {
    font-size: map-get($font-sizes, $size);
  } @else {
    @warn "Unknown font size: #{$size}";
  }
}

@mixin font-weight($weight) {
  @if map-has-key($font-weights, $weight) {
    font-weight: map-get($font-weights, $weight);
  } @else {
    @warn "Unknown font weight: #{$weight}";
  }
}

// Миксины для теней
@mixin box-shadow($level) {
  @if map-has-key($shadows, $level) {
    box-shadow: map-get($shadows, $level);
  } @else {
    @warn "Unknown shadow level: #{$level}";
  }
}

// Миксины для анимаций
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property 0.3s ease, comma);
  }
  transition: $transitions;
}

// Миксины для позиционирования
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-full {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

// Миксины
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin responsive($breakpoint) {
  @if $breakpoint == mobile {
    @media (max-width: 576px) {
      @content;
    }
  }
  @if $breakpoint == tablet {
    @media (max-width: 768px) {
      @content;
    }
  }
  @if $breakpoint == desktop {
    @media (max-width: 992px) {
      @content;
    }
  }
}

// Миксины для сеток
@mixin grid($columns: 1, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin grid-responsive($mobile: 1, $tablet: 2, $desktop: 3, $gap: 1rem) {
  display: grid;
  gap: $gap;

  @include respond-to(mobile) {
    grid-template-columns: repeat($mobile, 1fr);
  }

  @include respond-to(tablet) {
    grid-template-columns: repeat($tablet, 1fr);
  }

  @include respond-to(desktop) {
    grid-template-columns: repeat($desktop, 1fr);
  }
}

@mixin grid-auto-fit($min-size: 250px, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-size, 1fr));
  gap: $gap;
}

@mixin grid-auto-fill($min-size: 250px, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-size, 1fr));
  gap: $gap;
}

@mixin grid-area($rows: 1, $columns: 1) {
  grid-row: span $rows;
  grid-column: span $columns;
}

@mixin grid-gap($row-gap: 1rem, $column-gap: 1rem) {
  row-gap: $row-gap;
  column-gap: $column-gap;
}

@mixin grid-columns($jc:space-between) {
  display: grid;
  grid-auto-flow: column;
  justify-content: $jc;
}

.grid-columns {
  @include grid-columns();
}

@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin multi-truncate($rows:8) {
  display: -webkit-box;
  -webkit-line-clamp: $rows;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}